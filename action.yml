name: "Pytest HTML Plus Action"
description: "Run pytest with pytest-html-plus and generate rich reports"
inputs:
  testpath:
    description: "Optional path or target for pytest (e.g. 'tests/' or 'src/tests/test_file.py'). If empty, pytest discovery runs from repo root."
    required: false
    default: ""
  pytestargs:
    description: "Arguments to pass directly to pytest (e.g. '--cov=... --reruns 1')"
    required: false
    default: ""
  jsonreport:
    description: "Path for JSON report"
    required: false
    default: "final_report.json"
  capturescreenshots:
    description: "Capture screenshots (failed, all, none)"
    required: false
    default: "failed"
  htmloutput:
    description: "Directory to save HTML report"
    required: false
    default: "report_output"
  screenshots:
    description: "Directory to save screenshots"
    required: false
    default: "screenshots"
  plusemail:
    description: "Send HTML report via email"
    required: false
    default: "false"
  shouldopenreport:
    description: "When to open the report (always, failed, never)"
    required: false
    default: "failed"
  generatexml:
    description: "Generate JUnit-style XML"
    required: false
    default: "false"
  xmlreport:
    description: "Path to XML report"
    required: false
    default: ""
  usepoetry:
    description: "If true, run pytest through poetry (poetry run pytest)"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Install pytest-html-plus
      run: pip install pytest-html-plus
      shell: bash

    - name: Run entrypoint
      env:
        INPUT_TESTPATH: ${{ inputs.testpath }}
        INPUT_PYTESTARGS: ${{ inputs.pytestargs }}
        INPUT_JSONREPORT: ${{ inputs.jsonreport }}
        INPUT_SCREENSHOTS: ${{ inputs.screenshots }}
        INPUT_HTMLOUTPUT: ${{ inputs.htmloutput }}
        INPUT_PLUSEMAIL: ${{ inputs.plusemail }}
        INPUT_GENERATEXML: ${{ inputs.generatexml }}
        INPUT_XMLREPORT: ${{ inputs.xmlreport }}
        INPUT_CAPTURESCREENSHOTS: ${{ inputs.capturescreenshots }}
        INPUT_SHOULDOPENREPORT: ${{ inputs.shouldopenreport }}
        INPUT_USEPOETRY: ${{ inputs.usepoetry }}
      run: "${GITHUB_ACTION_PATH}/entrypoint.sh"
      shell: bash
  
branding:
  icon: "camera"
  color: "green"
